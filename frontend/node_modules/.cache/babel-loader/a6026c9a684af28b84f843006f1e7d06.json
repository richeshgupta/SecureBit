{"ast":null,"code":"var _jsxFileName = \"/home/richeshgupta/Desktop/SecureBit/frontend/src/Pages/chatInterface.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport favorite from \"../assets/star.png\";\nimport favoriteActive from \"../assets/favActive.png\";\nimport smiley from \"../assets/smiley.png\";\nimport send from \"../assets/send.png\";\nimport { ChatBubble, ProfileModal, UserAvatar } from \"./homeComponents\";\nimport settings from \"../assets/settings.png\";\nimport Loader from \"../components/loader\";\nimport { axiosHandler, errorHandler, getToken } from \"../helper\";\nimport { MESSAGE_URL, CHECK_FAVORITE_URL, UPDATE_FAVORITE_URL, READ_MESSAGE_URL } from \"../urls\";\nimport moment from \"moment\";\nimport { activeChatAction, triggerRefreshUserListAction } from \"../stateManagement/actions\";\nimport { store } from \"../stateManagement/store\";\nimport menu from \"../assets/menu.svg\";\nlet goneNext = false;\n\nfunction ChatInterface(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [fetching, setFetching] = useState(true);\n  const [nextPage, setNextPage] = useState(1);\n  const [canGoNext, setCanGoNext] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [shouldHandleScroll, setShouldHandleScroll] = useState(false);\n  const {\n    state: {\n      activeChat\n    },\n    dispatch\n  } = useContext(store);\n\n  const checkIsFav = async () => {\n    const token = await getToken();\n    const result = await axiosHandler({\n      method: \"get\",\n      url: CHECK_FAVORITE_URL + props.activeUser.user.id,\n      token\n    }).catch(e => console.log(e));\n\n    if (result) {\n      setIsFavorite(result.data);\n    }\n  };\n\n  const getMessages = async (append = false, page) => {\n    const token = await getToken();\n    setCanGoNext(false);\n    const result = await axiosHandler({\n      method: \"get\",\n      url: MESSAGE_URL + `?user_id=${props.activeUser.user.id}&page=${page ? page : nextPage}`,\n      token\n    }).catch(e => console.log(errorHandler(e)));\n\n    if (result) {\n      if (append) {\n        setMessages([...result.data.results.reverse(), ...messages]);\n        console.log(\"Message : \", e.target.value);\n        goneNext = false;\n      } else {\n        setMessages(result.data.results.reverse());\n      }\n\n      const messages_not_read = [];\n      result.data.results.map(item => {\n        if (item.is_read) return null;\n\n        if (item.receiver.user.id === props.loggedUser.user.id) {\n          messages_not_read.push(item.id);\n        }\n\n        return null;\n      });\n\n      if (messages_not_read.length > 0) {\n        updateMessage(messages_not_read);\n      }\n\n      if (result.data.next) {\n        setCanGoNext(true);\n        setNextPage(nextPage + 1);\n      }\n\n      setFetching(false);\n\n      if (!append) {\n        scrollToBottom();\n        setTimeout(() => setShouldHandleScroll(true), 1000);\n      }\n    }\n  };\n\n  const updateMessage = async message_ids => {\n    const token = await getToken();\n    axiosHandler({\n      method: \"post\",\n      url: READ_MESSAGE_URL,\n      token,\n      data: {\n        message_ids\n      }\n    });\n    dispatch({\n      type: triggerRefreshUserListAction,\n      payload: true\n    });\n  };\n\n  const reset = () => {\n    setMessages([]);\n    setFetching(true);\n    setCanGoNext(false);\n  };\n\n  useEffect(() => {\n    reset();\n    getMessages(false, 1);\n    checkIsFav();\n  }, [props.activeUser]);\n\n  const updateFav = async () => {\n    setIsFavorite(!isFavorite);\n    const token = await getToken();\n    const result = await axiosHandler({\n      method: \"post\",\n      url: UPDATE_FAVORITE_URL,\n      data: {\n        favorite_id: props.activeUser.user.id\n      },\n      token\n    }).catch(e => console.log(e));\n\n    if (!result) {\n      setIsFavorite(!isFavorite);\n    }\n  };\n\n  useEffect(() => {\n    if (activeChat) {\n      getMessages();\n      dispatch({\n        type: activeChatAction,\n        payload: null\n      });\n    }\n  }, [activeChat]);\n\n  const submitMessage = async e => {\n    e.preventDefault();\n    let data = {\n      sender_id: props.loggedUser.user.id,\n      receiver_id: props.activeUser.user.id,\n      message\n    };\n    const lastIndex = messages.length;\n    setMessages([...messages, data]);\n    setMessage(\"\");\n    const token = await getToken();\n    const result = await axiosHandler({\n      method: \"post\",\n      url: MESSAGE_URL,\n      token,\n      data\n    }).catch(e => console.log(errorHandler(e)));\n\n    if (result) {\n      messages[lastIndex] = result.data;\n      setMessages(messages);\n      scrollToBottom();\n    }\n  };\n\n  const handleBubbleType = item => {\n    if (item.sender_id) return \"sender\";\n    if (item.sender.user.id === props.loggedUser.user.id) return \"sender\";else return \"\";\n  };\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      let chatArea = document.getElementById(\"chatArea\");\n      chatArea.scrollTop = chatArea.scrollHeight;\n    }, 300);\n  };\n\n  const handleScroll = e => {\n    if (!shouldHandleScroll) return;\n\n    if (e.target.scrollTop <= 100) {\n      if (canGoNext && !goneNext) {\n        goneNext = true;\n        getMessages(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex align-center justify-between heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: menu,\n    alt: \"\",\n    onClick: props.toggleSideBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(UserAvatar, {\n    name: `${props.activeUser.first_name || \"\"} ${props.activeUser.last_name || \"\"}`,\n    profilePicture: props.activeUser.profile_picture && props.activeUser.profile_picture.file_upload,\n    caption: props.activeUser.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex align-center rightItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isFavorite ? favoriteActive : favorite,\n    onClick: updateFav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: settings,\n    onClick: () => props.setShowProfileModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatArea\",\n    id: \"chatArea\",\n    onScroll: handleScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, fetching ? /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })) : messages.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, \"No message yet\") : messages.map((item, key) => /*#__PURE__*/React.createElement(ChatBubble, {\n    bubbleType: handleBubbleType(item),\n    message: item.message,\n    time: item.created_at ? moment(item.created_at).format(\"YYYY-MM-DD hh:mm a\") : \"\",\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitMessage,\n    className: \"messageZone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex align-center justify-between topPart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Type your message here...\",\n    value: message,\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ChatInterface;","map":{"version":3,"sources":["/home/richeshgupta/Desktop/SecureBit/frontend/src/Pages/chatInterface.js"],"names":["React","useEffect","useState","useContext","favorite","favoriteActive","smiley","send","ChatBubble","ProfileModal","UserAvatar","settings","Loader","axiosHandler","errorHandler","getToken","MESSAGE_URL","CHECK_FAVORITE_URL","UPDATE_FAVORITE_URL","READ_MESSAGE_URL","moment","activeChatAction","triggerRefreshUserListAction","store","goneNext","ChatInterface","props","message","setMessage","messages","setMessages","fetching","setFetching","nextPage","setNextPage","canGoNext","setCanGoNext","isFavorite","setIsFavorite","shouldHandleScroll","setShouldHandleScroll","state","activeChat","dispatch","checkIsFav","token","result","method","url","activeUser","user","id","catch","e","console","log","data","getMessages","append","page","results","reverse","target","value","messages_not_read","map","item","is_read","receiver","loggedUser","push","length","updateMessage","next","scrollToBottom","setTimeout","message_ids","type","payload","reset","updateFav","favorite_id","submitMessage","preventDefault","sender_id","receiver_id","lastIndex","handleBubbleType","sender","chatArea","document","getElementById","scrollTop","scrollHeight","handleScroll","menu","toggleSideBar","first_name","last_name","profile_picture","file_upload","caption","setShowProfileModal","key","created_at","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport favorite from \"../assets/star.png\";\nimport favoriteActive from \"../assets/favActive.png\";\nimport smiley from \"../assets/smiley.png\";\nimport send from \"../assets/send.png\";\nimport { ChatBubble, ProfileModal, UserAvatar } from \"./homeComponents\";\nimport settings from \"../assets/settings.png\";\nimport Loader from \"../components/loader\";\nimport { axiosHandler, errorHandler, getToken } from \"../helper\";\nimport {MESSAGE_URL, CHECK_FAVORITE_URL, UPDATE_FAVORITE_URL, READ_MESSAGE_URL} from \"../urls\";\nimport moment from \"moment\"\nimport {activeChatAction, triggerRefreshUserListAction} from \"../stateManagement/actions\";\nimport { store } from \"../stateManagement/store\";\nimport menu from \"../assets/menu.svg\"\n\nlet goneNext = false;\n\nfunction ChatInterface(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [fetching, setFetching] = useState(true);\n  const [nextPage, setNextPage] = useState(1)\n  const [canGoNext, setCanGoNext] = useState(false)\n  const [isFavorite, setIsFavorite] = useState(false)\n  const [shouldHandleScroll, setShouldHandleScroll] = useState(false)\n\n  const {state:{activeChat}, dispatch} = useContext(store)\n\n  const checkIsFav = async () => {\n    const token = await getToken();\n    const result = await axiosHandler({\n      method:\"get\", \n      url:CHECK_FAVORITE_URL+props.activeUser.user.id, \n      token\n    }).catch(e => console.log(e))\n    if(result){\n      setIsFavorite(result.data)\n    }\n  }\n\n  const getMessages = async (append=false, page) => {\n    const token = await getToken()\n    setCanGoNext(false)\n\n    const result = await axiosHandler({\n      method:\"get\",\n      url: MESSAGE_URL + `?user_id=${props.activeUser.user.id}&page=${page ? page : nextPage}`,\n      token\n    }).catch(e => console.log(errorHandler(e)))\n    \n\n    if(result){\n      if(append){\n        setMessages([...result.data.results.reverse(), ...messages]);\n        console.log(\"Message : \",e.target.value);\n        goneNext = false;\n      }\n      else{\n        setMessages(result.data.results.reverse());\n      }\n\n      const messages_not_read = []\n      result.data.results.map(item => {\n        if(item.is_read)return null\n        if(item.receiver.user.id === props.loggedUser.user.id){\n          messages_not_read.push(item.id)\n        }\n        return null\n      })\n\n      if(messages_not_read.length > 0){\n        updateMessage(messages_not_read)\n      }\n      \n      if(result.data.next)\n      {\n        setCanGoNext(true)\n        setNextPage(nextPage + 1)\n      }\n      \n      setFetching(false)\n      if(!append)\n      {\n        scrollToBottom()\n        setTimeout(() => setShouldHandleScroll(true), 1000)\n      }\n    }\n  }\n\n  const updateMessage = async (message_ids) => {\n    const token = await getToken()\n    axiosHandler({method:\"post\", url:READ_MESSAGE_URL, token, data:{message_ids}})\n    dispatch({type: triggerRefreshUserListAction, payload: true})\n  }\n\n  const reset = () => {\n    setMessages([])\n    setFetching(true)\n    setCanGoNext(false)\n  }\n\n  useEffect(() => {\n    reset()\n    getMessages(false, 1)\n    checkIsFav()\n  }, [props.activeUser])\n\n  const updateFav = async () => {\n    setIsFavorite(!isFavorite);\n    const token = await getToken();\n    const result = await axiosHandler({method:\"post\", url:UPDATE_FAVORITE_URL, data:{\n      favorite_id: props.activeUser.user.id\n    }, token}).catch(e => console.log(e))\n    if(!result){\n      setIsFavorite(!isFavorite);\n    }\n  }\n\n  useEffect(() => {\n    if(activeChat){\n      getMessages();\n      dispatch({type:activeChatAction, payload:null})\n    }\n  }, [activeChat])\n\n  const submitMessage = async (e) => {\n    e.preventDefault();\n    let data = {\n      sender_id: props.loggedUser.user.id,\n      receiver_id: props.activeUser.user.id,\n      message,\n    };\n    const lastIndex = messages.length\n    setMessages([...messages, data]);\n    setMessage(\"\");\n\n\n    const token = await getToken()\n    const result = await axiosHandler({\n      method:\"post\",\n      url: MESSAGE_URL,\n      token, data\n    }).catch(e => console.log(errorHandler(e)))\n\n    if(result){\n      messages[lastIndex] = result.data\n      \n      setMessages(messages)\n      scrollToBottom()\n    }\n  };\n\n  const handleBubbleType = (item) => {\n    if(item.sender_id) return \"sender\"\n\n    if(item.sender.user.id === props.loggedUser.user.id)return \"sender\"\n    else return \"\"\n  }\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      let chatArea = document.getElementById(\"chatArea\")\n      chatArea.scrollTop = chatArea.scrollHeight;\n    }, 300)\n  }\n\n  const handleScroll = e => {\n    if(!shouldHandleScroll)return;\n    if(e.target.scrollTop <= 100){\n      if(canGoNext && !goneNext){\n        goneNext = true;\n        getMessages(true)\n      }\n    }\n  }\n\n\n\n  return (\n    <>\n      <div className=\"flex align-center justify-between heading\">\n        <div className=\"flex align-center\">\n          <div className=\"mobile\">\n            <img src={menu} alt=\"\" onClick={props.toggleSideBar}/>&nbsp;&nbsp;\n          </div>\n          <UserAvatar\n              name={`${props.activeUser.first_name || \"\"} ${\n                  props.activeUser.last_name || \"\"\n              }`}\n              profilePicture={props.activeUser.profile_picture && props.activeUser.profile_picture.file_upload}\n              caption={props.activeUser.caption}\n          />\n        </div>\n        <div className=\"flex align-center rightItems\">\n          <img src={isFavorite ? favoriteActive : favorite} onClick={updateFav} />\n          <img src={settings} onClick={() => props.setShowProfileModal(true)} />\n        </div>\n      </div>\n      <div className=\"chatArea\" id=\"chatArea\" onScroll={handleScroll}>\n        {fetching ? (\n          <center>\n            <Loader />\n          </center>\n        ) : messages.length < 1 ? (\n          <div className=\"noUser\">No message yet</div>\n        ) : (\n          messages.map((item, key) => (\n            <ChatBubble\n              bubbleType={handleBubbleType(item)}\n              message={item.message}\n              time={item.created_at ? moment(item.created_at).format(\"YYYY-MM-DD hh:mm a\") : \"\"}\n              key={key}\n            />\n          ))\n        )}\n      </div>\n      <form onSubmit={submitMessage} className=\"messageZone\">\n        <div className=\"flex align-center justify-between topPart\">\n          <div/>\n          <button type=\"submit\">\n            <img src={send} />\n          </button>\n        </div>\n        <input\n          placeholder=\"Type your message here...\"\n          value={message}\n          onChange={(e) => {\n            \n            setMessage(e.target.value);\n          }}\n        />\n      </form>\n    </>\n  );\n}\n\nexport default ChatInterface;\n"]},"metadata":{},"sourceType":"module"}