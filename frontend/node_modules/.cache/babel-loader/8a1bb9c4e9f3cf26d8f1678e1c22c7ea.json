{"ast":null,"code":"var _jsxFileName = \"/home/richeshgupta/Desktop/SecureBit/frontend/src/app.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { activeChatAction, userDetailAction } from \"./stateManagement/actions\";\nimport { store } from \"./stateManagement/store\";\nimport { sendTestSocket } from \"./socketService\";\n\nconst SimpleMessage = props => {\n  const [name, setName] = useState(\"\");\n  const [showMessage, setShowMessage] = useState(false);\n  const {\n    dispatch\n  } = useContext(store);\n\n  const onsubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: userDetailAction,\n      payload: name\n    });\n    setShowMessage(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !showMessage ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Hello there, Please Enter your name\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"submit\"))) : /*#__PURE__*/React.createElement(MessageInterface, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default SimpleMessage;\n\nconst MessageInterface = props => {\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const {\n    state: {\n      userDetail,\n      activeChat\n    },\n    dispatch\n  } = useContext(store);\n  useEffect(() => {\n    if (name != userDetail) {\n      setName(userDetail);\n    }\n\n    if (activeChat) {\n      setMessages([...messages, activeChat]);\n      dispatch({\n        type: activeChatAction,\n        payload: null\n      });\n    }\n  }, [userDetail, activeChat]);\n\n  const submit = e => {\n    e.preventDefault();\n    let data = {\n      sender: name,\n      receiver,\n      message\n    };\n    setMessages([...messages, data]);\n    sendTestSocket(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Hello \", name), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: receiver,\n    placeholder: \"enter receiver name\",\n    onChange: e => setReceiver(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"start typing message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"send\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), messages.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"No messages yet\") : messages.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, item.message), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, item.sender), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }));\n  }));\n};","map":{"version":3,"sources":["/home/richeshgupta/Desktop/SecureBit/frontend/src/app.js"],"names":["React","useState","useEffect","useContext","activeChatAction","userDetailAction","store","sendTestSocket","SimpleMessage","props","name","setName","showMessage","setShowMessage","dispatch","onsubmit","e","preventDefault","type","payload","target","value","MessageInterface","message","setMessage","receiver","setReceiver","messages","setMessages","state","userDetail","activeChat","submit","data","sender","length","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { activeChatAction, userDetailAction } from \"./stateManagement/actions\";\nimport { store } from \"./stateManagement/store\";\nimport { sendTestSocket } from \"./socketService\";\n\nconst SimpleMessage = (props) => {\n  const [name, setName] = useState(\"\");\n  const [showMessage, setShowMessage] = useState(false);\n\n  const { dispatch } = useContext(store);\n\n  const onsubmit = (e) => {\n    e.preventDefault();\n    dispatch({ type: userDetailAction, payload: name });\n    setShowMessage(true);\n  };\n\n  return (\n    <>\n      {!showMessage ? (\n        <div>\n          <h3>Hello there, Please Enter your name</h3>\n          <form onSubmit={onsubmit}>\n            <input value={name} onChange={(e) => setName(e.target.value)} />\n            <button type=\"submit\">submit</button>\n          </form>\n        </div>\n      ) : (\n        <MessageInterface />\n      )}\n    </>\n  );\n};\n\nexport default SimpleMessage;\n\nconst MessageInterface = (props) => {\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const {\n    state: { userDetail, activeChat },\n    dispatch,\n  } = useContext(store);\n\n  useEffect(() => {\n    if (name != userDetail) {\n      setName(userDetail);\n    }\n    if (activeChat) {\n      setMessages([...messages, activeChat]);\n      dispatch({ type: activeChatAction, payload: null });\n    }\n  }, [userDetail, activeChat]);\n\n  const submit = (e) => {\n    e.preventDefault();\n    let data = {\n      sender: name,\n      receiver,\n      message,\n    };\n    setMessages([...messages, data]);\n    sendTestSocket(data);\n  };\n\n  return (\n    <div>\n      <h2>Hello {name}</h2>\n      <form onSubmit={submit}>\n        <input\n          value={receiver}\n          placeholder=\"enter receiver name\"\n          onChange={(e) => setReceiver(e.target.value)}\n        />\n        <br />\n        <textarea\n          placeholder=\"start typing message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        ></textarea>\n        <br />\n        <button type=\"submit\">send</button>\n      </form>\n      <br />\n      {messages.length < 1 ? (\n        <div>No messages yet</div>\n      ) : (\n        messages.map((item, index) => {\n          return (\n            <div key={index}>\n              <b>{item.message}</b>\n              <br />\n              <small>{item.sender}</small>\n              <hr />\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}