{"ast":null,"code":"var _jsxFileName = \"/home/richeshgupta/Desktop/project-finish/chatApp-frontend/src/stateManagement/store.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport { updateChatReducer, updateChatState, userDetailReducer, userDetailState, activeChatReducer, activeChatState, activeChatUserReducer, activeChatUserState, triggerRefreshUserListReducer, triggerRefreshUserListState } from \"./reducers\";\n\nconst reduceReducers = (...reducers) => (prevState, value, ...args) => {\n  return reducers.reduce((newState, reducer) => reducer(newState, value, ...args), prevState);\n};\n\nconst combinedReducers = reduceReducers(updateChatReducer, userDetailReducer, activeChatReducer, activeChatUserReducer, triggerRefreshUserListReducer);\nconst initialState = { ...updateChatState,\n  ...userDetailState,\n  ...activeChatState,\n  ...activeChatUserState,\n  ...triggerRefreshUserListState\n};\nconst store = createContext(initialState);\nconst {\n  Provider\n} = store;\n\nconst StoreProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(combinedReducers, initialState);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport { store, StoreProvider };","map":{"version":3,"sources":["/home/richeshgupta/Desktop/project-finish/chatApp-frontend/src/stateManagement/store.js"],"names":["React","createContext","useReducer","updateChatReducer","updateChatState","userDetailReducer","userDetailState","activeChatReducer","activeChatState","activeChatUserReducer","activeChatUserState","triggerRefreshUserListReducer","triggerRefreshUserListState","reduceReducers","reducers","prevState","value","args","reduce","newState","reducer","combinedReducers","initialState","store","Provider","StoreProvider","children","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,qBAPF,EAQEC,mBARF,EASIC,6BATJ,EAUIC,2BAVJ,QAWO,YAXP;;AAaA,MAAMC,cAAc,GAAG,CAAC,GAAGC,QAAJ,KAAiB,CAACC,SAAD,EAAYC,KAAZ,EAAmB,GAAGC,IAAtB,KAA+B;AACrE,SAAOH,QAAQ,CAACI,MAAT,CACL,CAACC,QAAD,EAAWC,OAAX,KAAuBA,OAAO,CAACD,QAAD,EAAWH,KAAX,EAAkB,GAAGC,IAArB,CADzB,EAELF,SAFK,CAAP;AAID,CALD;;AAOA,MAAMM,gBAAgB,GAAGR,cAAc,CACrCV,iBADqC,EAErCE,iBAFqC,EAGrCE,iBAHqC,EAIrCE,qBAJqC,EAKnCE,6BALmC,CAAvC;AAQA,MAAMW,YAAY,GAAG,EACnB,GAAGlB,eADgB;AAEnB,KAAGE,eAFgB;AAGnB,KAAGE,eAHgB;AAInB,KAAGE,mBAJgB;AAKnB,KAAGE;AALgB,CAArB;AAQA,MAAMW,KAAK,GAAGtB,aAAa,CAACqB,YAAD,CAA3B;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAeD,KAArB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,UAAU,CAACmB,gBAAD,EAAmBC,YAAnB,CAApC;AAEA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCF,QAAvC,CAAP;AACD,CAJD;;AAMA,SAASH,KAAT,EAAgBE,aAAhB","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport {\n  updateChatReducer,\n  updateChatState,\n  userDetailReducer,\n  userDetailState,\n  activeChatReducer,\n  activeChatState,\n  activeChatUserReducer,\n  activeChatUserState,\n    triggerRefreshUserListReducer,\n    triggerRefreshUserListState\n} from \"./reducers\";\n\nconst reduceReducers = (...reducers) => (prevState, value, ...args) => {\n  return reducers.reduce(\n    (newState, reducer) => reducer(newState, value, ...args),\n    prevState\n  );\n};\n\nconst combinedReducers = reduceReducers(\n  updateChatReducer,\n  userDetailReducer,\n  activeChatReducer,\n  activeChatUserReducer,\n    triggerRefreshUserListReducer\n);\n\nconst initialState = {\n  ...updateChatState,\n  ...userDetailState,\n  ...activeChatState,\n  ...activeChatUserState,\n  ...triggerRefreshUserListState\n};\n\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(combinedReducers, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StoreProvider };\n"]},"metadata":{},"sourceType":"module"}